receivers:
  # https://github.com/open-telemetry/opentelemetry-collector/tree/main/receiver/otlpreceiver
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

exporters:
  # https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/loggingexporter/README.md
  logging:
    verbosity: normal
  
  # https://github.com/open-telemetry/opentelemetry-collector-contrib/blob/main/exporter/lokiexporter/README.md
  loki:
    endpoint: http://loki:3100/loki/api/v1/push
    tls:
      insecure: true
  
  # https://github.com/open-telemetry/opentelemetry-collector/blob/main/exporter/otlpexporter/README.md
  otlp/tempo:
    endpoint: http://tempo:4317
    tls:
      insecure: true
  
  prometheus:
    endpoint: 0.0.0.0:8889
    send_timestamps: true
    metric_expiration: 180m
    resource_to_telemetry_conversion:
      enabled: true
  
  prometheusremotewrite:
    endpoint: "http://remote-prometheus:9090/api/v1/push"
    tls:
      insecure: true
    resource_to_telemetry_conversion:
      enabled: true

processors:
  batch:
  memory_limiter:
    # 80% of maximum memory up to 2G
    limit_mib: 1500
    # 25% of limit up to 2G
    spike_limit_mib: 512
    check_interval: 5s
  
  # for loki
  resource:
    attributes:
      - action: insert
        key: loki.resource.labels
        value: service.name, service.namespace, service.version, ApplicationName

service:
  pipelines:
    logs:
      receivers: [otlp]
      processors: [resource]
      exporters: [loki]
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch]
      exporters: [otlp/tempo]
    metrics:
      receivers: [otlp]
      processors: [batch]
      exporters: [prometheus]
      # exporters: [prometheusremotewrite]