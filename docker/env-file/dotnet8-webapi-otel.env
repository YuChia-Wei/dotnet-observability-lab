# Open Telemetry Auto Instrumentation 所需參數
ASPNETCORE_HOSTINGSTARTUPASSEMBLIES=OpenTelemetry.AutoInstrumentation.AspNetCoreBootstrapper
CORECLR_ENABLE_PROFILING=1
CORECLR_PROFILER={918728DD-259F-4A6A-AC2B-B85E1B658318}
CORECLR_PROFILER_PATH=/otel-dotnet-auto/linux-x64/OpenTelemetry.AutoInstrumentation.Native.so
DOTNET_ADDITIONAL_DEPS=/otel-dotnet-auto/AdditionalDeps
DOTNET_SHARED_STORE=/otel-dotnet-auto/store
DOTNET_STARTUP_HOOKS=/otel-dotnet-auto/net/OpenTelemetry.AutoInstrumentation.StartupHook.dll
OTEL_DOTNET_AUTO_HOME=/otel-dotnet-auto
OTEL_DOTNET_AUTO_LOGS_ENABLED=true
OTEL_DOTNET_AUTO_LOGS_INCLUDE_FORMATTED_MESSAGE=true

# 這兩個環境參數的內容可參考專案中的 AOP 元件 observability.component.DiagnosticsResource.Name() 的設定值
OTEL_DOTNET_AUTO_METRICS_ADDITIONAL_SOURCES=lab.observability.library
OTEL_DOTNET_AUTO_TRACES_ADDITIONAL_SOURCES=lab.observability.library

OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector-contrib:4317
OTEL_EXPORTER_OTLP_PROTOCOL=grpc
# deployment.environment 的參數建議由負責對應環境的收集器進行設定，而 aspnet core 的執行環境參數另外由 ghcr.io/yuchia-wei/otel-dotnet-auto-instrumentation 的容器內的 plugin 進行設定
#OTEL_RESOURCE_ATTRIBUTES=service.version=lab.dotnet8.webapi:dev,deployment.environment=dev
OTEL_RESOURCE_ATTRIBUTES=service.version=lab.dotnet8.webapi:dev
OTEL_SERVICE_NAME=lab.dotnet8.webapi

# 調整 log 設定，此部分設定因為僅在容器內執行時才需使用，所以統一於此設定
Logging__OpenTelemetry__IncludeScopes=true
Logging__OpenTelemetry__LogLevel__Default=Information
Logging__Console__FormatterName=Simple
Logging__Console__FormatterOptions__SingleLine=true